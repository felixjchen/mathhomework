{
  "address": "0x315B687D724626d84bD8dD0d816E1BC1A89b7346",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[2][]",
          "name": "_amountsOut",
          "type": "uint256[2][]"
        },
        {
          "internalType": "uint256",
          "name": "_toCoinbase",
          "type": "uint256"
        }
      ],
      "name": "hi",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "s",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "setWeth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc4c657669904d5e37b2173bbd8b53a1af4b198aec3916bbb2345bf3777daa1bb",
  "receipt": {
    "to": null,
    "from": "0xF479cBA4257371790263Fe9d8F78D9C2c99f1837",
    "contractAddress": "0x315B687D724626d84bD8dD0d816E1BC1A89b7346",
    "transactionIndex": 40,
    "gasUsed": "633832",
    "logsBloom": "0x
    "blockHash": "0x96fcb70b93eeb64f5ab87b291a2de150209d8bf14f7f3e876ab350312b471fda",
    "transactionHash": "0xc4c657669904d5e37b2173bbd8b53a1af4b198aec3916bbb2345bf3777daa1bb",
    "logs": [],
    "blockNumber": 8118499,
    "cumulativeGasUsed": "19998316",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF479cBA4257371790263Fe9d8F78D9C2c99f1837"
  ],
  "numDeployments": 2,
  "solcInputHash": "9be15b5c1f439ca4c80a5ab7f2f8e143",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"_amountsOut\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256\",\"name\":\"_toCoinbase\",\"type\":\"uint256\"}],\"name\":\"hi\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"s\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setWeth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BundleExecutor.sol\":\"BundleExecutor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BundleExecutor.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\npragma experimental ABIEncoderV2;\\n\\ninterface IUniswapV2Pair {\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n}\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n}\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256) external;\\n}\\n\\n// This contract simply calls multiple targets sequentially, ensuring WETH balance before and after\\n\\ncontract BundleExecutor {\\n    address private immutable owner;\\n    address private immutable executor;\\n\\n    IWETH public WETH = IWETH(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\n\\n    modifier onlyExecutor() {\\n        require(msg.sender == executor, \\\"Only executor\\\");\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner\\\");\\n        _;\\n    }\\n\\n    constructor(address _executor) {\\n        owner = msg.sender;\\n        executor = _executor;\\n    }\\n\\n    function setWeth(address _new) external onlyOwner {\\n        WETH = IWETH(_new);\\n    }\\n\\n    function s(\\n        IERC20 token,\\n        address _to,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        token.transfer(_to, _amount);\\n    }\\n\\n    function hi(\\n        uint256 _amountIn,\\n        address[] calldata _targets,\\n        uint256[2][] calldata _amountsOut,\\n        uint256 _toCoinbase\\n    ) public onlyExecutor {\\n        uint256 _wethBalanceBefore = WETH.balanceOf(address(this));\\n\\n        WETH.transfer(_targets[0], _amountIn);\\n        uint256 n = _targets.length;\\n        for (uint256 i = 0; i < n - 1; i = unsafe_inc(i)) {\\n            IUniswapV2Pair(_targets[i]).swap(\\n                _amountsOut[i][0],\\n                _amountsOut[i][1],\\n                _targets[i + 1],\\n                \\\"\\\"\\n            );\\n        }\\n        IUniswapV2Pair(_targets[n - 1]).swap(\\n            _amountsOut[n - 1][0],\\n            _amountsOut[n - 1][1],\\n            address(this),\\n            \\\"\\\"\\n        );\\n\\n        uint256 _wethBalanceAfter = WETH.balanceOf(address(this));\\n        require(\\n            _wethBalanceAfter > _wethBalanceBefore + _toCoinbase,\\n            \\\"not profitable\\\"\\n        );\\n\\n        uint256 _ethBalance = address(this).balance;\\n        if (_ethBalance < _toCoinbase) {\\n            WETH.withdraw(_toCoinbase - _ethBalance);\\n        }\\n        block.coinbase.transfer(_toCoinbase);\\n    }\\n\\n    // function hi2(\\n    //     uint256[] calldata _amountIn,\\n    //     address[][] calldata _targets,\\n    //     uint256[2][][] calldata _amountsOut\\n    // ) external onlyExecutor {\\n    //     uint256 n = _amountIn.length;\\n    //     for (uint256 i = 0; i < n; i = unsafe_inc(i)) {\\n    //         hi(_amountIn[i], _targets[i], _amountsOut[i]);\\n    //     }\\n    // }\\n\\n    // function hp(\\n    //     uint256 _amountIn,\\n    //     address[] calldata _targets,\\n    //     bytes[] calldata _payloads\\n    // ) public onlyExecutor {\\n    //     uint256 _wethBalanceBefore = WETH.balanceOf(address(this));\\n    //     bool success = WETH.transfer(_targets[0], _amountIn);\\n    //     require(success, \\\"f\\\");\\n    //     for (uint256 i = 0; i < _targets.length; i = unsafe_inc(i)) {\\n    //         (bool _success, bytes memory _response) = _targets[i].call(\\n    //             _payloads[i]\\n    //         );\\n    //         require(_success, \\\"l\\\");\\n    //         _response;\\n    //     }\\n    //     uint256 _wethBalanceAfter = WETH.balanceOf(address(this));\\n    //     require(_wethBalanceAfter > _wethBalanceBefore, \\\"np\\\");\\n    // }\\n\\n    // function hp2(\\n    //     uint256[] calldata _amountIn,\\n    //     address[][] calldata _targets,\\n    //     bytes[][] calldata _payloads\\n    // ) external onlyExecutor {\\n    //     uint256 n = _amountIn.length;\\n    //     for (uint256 i = 0; i < n; i = unsafe_inc(i)) {\\n    //         hp(_amountIn[i], _targets[i], _payloads[i]);\\n    //     }\\n    // }\\n\\n    function unsafe_inc(uint256 x) private pure returns (uint256) {\\n        unchecked {\\n            return x + 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe84ff59c0e1bc68a0e34155983b2697e221f924a758e4bfb1f8c0f8a54baa962\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c0604052600080546001600160a01b031916730d500b1d8e8ef31e21c99d1db9a6444d3adf127017905534801561003657600080fd5b50604051610ad7380380610ad78339810160408190526100559161006a565b336080526001600160a01b031660a05261009a565b60006020828403121561007c57600080fd5b81516001600160a01b038116811461009357600080fd5b9392505050565b60805160a051610a126100c5600039600061023f01526000818160c601526101b80152610a126000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634082869814610051578063ad5c464814610066578063b8d1452f14610095578063f9a9487d146100a8575b600080fd5b61006461005f3660046107e2565b6100bb565b005b600054610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100a3366004610823565b6101ad565b6100646100b6366004610893565b610234565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101255760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561016f57600080fd5b505af1158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610946565b50505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102125760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161011c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461029c5760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9032bc32b1baba37b960991b604482015260640161011c565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610968565b600080549192506001600160a01b039091169063a9059cbb90889088908161034257610342610981565b90506020020160208101906103579190610823565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018a9052604401602060405180830381600087803b15801561039f57600080fd5b505af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190610946565b508460005b6103e76001836109ad565b8110156105385787878281811061040057610400610981565b90506020020160208101906104159190610823565b6001600160a01b031663022c0d9f87878481811061043557610435610981565b90506040020160006002811061044d5761044d610981565b602002013588888581811061046457610464610981565b90506040020160016002811061047c5761047c610981565b60200201358b8b61048e8760016109c4565b81811061049d5761049d610981565b90506020020160208101906104b29190610823565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526001600160a01b03166044820152608060648201526000608482015260a401600060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506105318160010190565b90506103dc565b5086866105466001846109ad565b81811061055557610555610981565b905060200201602081019061056a9190610823565b6001600160a01b031663022c0d9f86866105856001866109ad565b81811061059457610594610981565b9050604002016000600281106105ac576105ac610981565b602002013587876105be6001876109ad565b8181106105cd576105cd610981565b9050604002016001600281106105e5576105e5610981565b6040516001600160e01b031960e086901b168152600481019390935260200201356024820152306044820152608060648201526000608482015260a401600060405180830381600087803b15801561063c57600080fd5b505af1158015610650573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190610968565b90506106dc84846109c4565b811161071b5760405162461bcd60e51b815260206004820152600e60248201526d6e6f742070726f66697461626c6560901b604482015260640161011c565b4784811015610790576000546001600160a01b0316632e1a7d4d61073f83886109ad565b6040518263ffffffff1660e01b815260040161075d91815260200190565b600060405180830381600087803b15801561077757600080fd5b505af115801561078b573d6000803e3d6000fd5b505050505b604051419086156108fc029087906000818181858888f193505050501580156107bd573d6000803e3d6000fd5b5050505050505050505050565b6001600160a01b03811681146107df57600080fd5b50565b6000806000606084860312156107f757600080fd5b8335610802816107ca565b92506020840135610812816107ca565b929592945050506040919091013590565b60006020828403121561083557600080fd5b8135610840816107ca565b9392505050565b60008083601f84011261085957600080fd5b50813567ffffffffffffffff81111561087157600080fd5b6020830191508360208260061b850101111561088c57600080fd5b9250929050565b600080600080600080608087890312156108ac57600080fd5b86359550602087013567ffffffffffffffff808211156108cb57600080fd5b818901915089601f8301126108df57600080fd5b8135818111156108ee57600080fd5b8a60208260051b850101111561090357600080fd5b60208301975080965050604089013591508082111561092157600080fd5b5061092e89828a01610847565b979a9699509497949695606090950135949350505050565b60006020828403121561095857600080fd5b8151801515811461084057600080fd5b60006020828403121561097a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156109bf576109bf610997565b500390565b600082198211156109d7576109d7610997565b50019056fea2646970667358221220b372485989301e970a913577a3dbcb98b02c3d5bf2aade62674ef6bfc9936b1e64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80634082869814610051578063ad5c464814610066578063b8d1452f14610095578063f9a9487d146100a8575b600080fd5b61006461005f3660046107e2565b6100bb565b005b600054610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100a3366004610823565b6101ad565b6100646100b6366004610893565b610234565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101255760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561016f57600080fd5b505af1158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610946565b50505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102125760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161011c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461029c5760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9032bc32b1baba37b960991b604482015260640161011c565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610968565b600080549192506001600160a01b039091169063a9059cbb90889088908161034257610342610981565b90506020020160208101906103579190610823565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018a9052604401602060405180830381600087803b15801561039f57600080fd5b505af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190610946565b508460005b6103e76001836109ad565b8110156105385787878281811061040057610400610981565b90506020020160208101906104159190610823565b6001600160a01b031663022c0d9f87878481811061043557610435610981565b90506040020160006002811061044d5761044d610981565b602002013588888581811061046457610464610981565b90506040020160016002811061047c5761047c610981565b60200201358b8b61048e8760016109c4565b81811061049d5761049d610981565b90506020020160208101906104b29190610823565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526001600160a01b03166044820152608060648201526000608482015260a401600060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506105318160010190565b90506103dc565b5086866105466001846109ad565b81811061055557610555610981565b905060200201602081019061056a9190610823565b6001600160a01b031663022c0d9f86866105856001866109ad565b81811061059457610594610981565b9050604002016000600281106105ac576105ac610981565b602002013587876105be6001876109ad565b8181106105cd576105cd610981565b9050604002016001600281106105e5576105e5610981565b6040516001600160e01b031960e086901b168152600481019390935260200201356024820152306044820152608060648201526000608482015260a401600060405180830381600087803b15801561063c57600080fd5b505af1158015610650573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190610968565b90506106dc84846109c4565b811161071b5760405162461bcd60e51b815260206004820152600e60248201526d6e6f742070726f66697461626c6560901b604482015260640161011c565b4784811015610790576000546001600160a01b0316632e1a7d4d61073f83886109ad565b6040518263ffffffff1660e01b815260040161075d91815260200190565b600060405180830381600087803b15801561077757600080fd5b505af115801561078b573d6000803e3d6000fd5b505050505b604051419086156108fc029087906000818181858888f193505050501580156107bd573d6000803e3d6000fd5b5050505050505050505050565b6001600160a01b03811681146107df57600080fd5b50565b6000806000606084860312156107f757600080fd5b8335610802816107ca565b92506020840135610812816107ca565b929592945050506040919091013590565b60006020828403121561083557600080fd5b8135610840816107ca565b9392505050565b60008083601f84011261085957600080fd5b50813567ffffffffffffffff81111561087157600080fd5b6020830191508360208260061b850101111561088c57600080fd5b9250929050565b600080600080600080608087890312156108ac57600080fd5b86359550602087013567ffffffffffffffff808211156108cb57600080fd5b818901915089601f8301126108df57600080fd5b8135818111156108ee57600080fd5b8a60208260051b850101111561090357600080fd5b60208301975080965050604089013591508082111561092157600080fd5b5061092e89828a01610847565b979a9699509497949695606090950135949350505050565b60006020828403121561095857600080fd5b8151801515811461084057600080fd5b60006020828403121561097a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156109bf576109bf610997565b500390565b600082198211156109d7576109d7610997565b50019056fea2646970667358221220b372485989301e970a913577a3dbcb98b02c3d5bf2aade62674ef6bfc9936b1e64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 117,
        "contract": "contracts/BundleExecutor.sol:BundleExecutor",
        "label": "WETH",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IWETH)107"
      }
    ],
    "types": {
      "t_contract(IWETH)107": {
        "encoding": "inplace",
        "label": "contract IWETH",
        "numberOfBytes": "20"
      }
    }
  }
}