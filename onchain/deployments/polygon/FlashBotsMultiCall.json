{
  "address": "0x6962AD493D2fA1cA187075A2653d9CdCE4C21DD3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "call",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[2][]",
          "name": "_amountsOut",
          "type": "uint256[2][]"
        }
      ],
      "name": "hoppity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "setWeth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sweepERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wethAmountToFirstMarket",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ethAmountToCoinbase",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_payloads",
          "type": "bytes[]"
        }
      ],
      "name": "uniswapWeth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa0e4d1be16e7fec8f459d2f3f898b512c721326b7e2b8f0e436ed0bdcab5b760",
  "receipt": {
    "to": null,
    "from": "0xF479cBA4257371790263Fe9d8F78D9C2c99f1837",
    "contractAddress": "0x6962AD493D2fA1cA187075A2653d9CdCE4C21DD3",
    "transactionIndex": 54,
    "gasUsed": "1065906",
    "logsBloom": "0x
    "blockHash": "0xf27a7dd2721434712b6d823caf23158fa98f5a1251039a2c1af51c59b66afd41",
    "transactionHash": "0xa0e4d1be16e7fec8f459d2f3f898b512c721326b7e2b8f0e436ed0bdcab5b760",
    "logs": [
      {
        "transactionIndex": 54,
        "blockNumber": 33104714,
        "transactionHash": "0xa0e4d1be16e7fec8f459d2f3f898b512c721326b7e2b8f0e436ed0bdcab5b760",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000f479cba4257371790263fe9d8f78d9c2c99f1837",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000008fe68fd0e45192000000000000000000000000000000000000000000000000f994d9eb5d2ad7490000000000000000000000000000000000000000000005ec44fec3b14ab8c23a000000000000000000000000000000000000000000000000f904f35b8c4685b70000000000000000000000000000000000000000000005ec458eaa411b9d13cc",
        "logIndex": 305,
        "blockHash": "0xf27a7dd2721434712b6d823caf23158fa98f5a1251039a2c1af51c59b66afd41"
      }
    ],
    "blockNumber": 33104714,
    "cumulativeGasUsed": "9933827",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF479cBA4257371790263Fe9d8F78D9C2c99f1837"
  ],
  "numDeployments": 4,
  "solcInputHash": "046d2bfac2670e5ef2a1a08dde8ea5bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"_amountsOut\",\"type\":\"uint256[2][]\"}],\"name\":\"hoppity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setWeth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sweepERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wethAmountToFirstMarket\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethAmountToCoinbase\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_payloads\",\"type\":\"bytes[]\"}],\"name\":\"uniswapWeth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BundleExecutor.sol\":\"FlashBotsMultiCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BundleExecutor.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\npragma experimental ABIEncoderV2;\\n\\ninterface IUniswapV2Pair {\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n}\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n}\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256) external;\\n}\\n\\n// This contract simply calls multiple targets sequentially, ensuring WETH balance before and after\\n\\ncontract FlashBotsMultiCall {\\n    address private immutable owner;\\n    address private immutable executor;\\n\\n    // TODO IDK\\n    IWETH private WETH = IWETH(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\n\\n    modifier onlyExecutor() {\\n        require(msg.sender == executor, \\\"Only executor\\\");\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner\\\");\\n        _;\\n    }\\n\\n    constructor(address _executor) payable {\\n        owner = msg.sender;\\n        executor = _executor;\\n        if (msg.value > 0) {\\n            WETH.deposit{value: msg.value}();\\n        }\\n    }\\n\\n    function setWeth(address _new) public onlyOwner {\\n        WETH = IWETH(_new);\\n    }\\n\\n    receive() external payable {}\\n\\n    function sweepERC20(\\n        IERC20 token,\\n        address _to,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        token.transfer(_to, _amount);\\n    }\\n\\n    function hoppity(\\n        uint256 _amountIn,\\n        address[] calldata _targets,\\n        uint256[2][] calldata _amountsOut\\n    ) external payable onlyExecutor {\\n        uint256 _wethBalanceBefore = WETH.balanceOf(address(this));\\n\\n        bool success = WETH.transfer(_targets[0], _amountIn);\\n        require(success, \\\"first weth fail\\\");\\n        uint256 n = _targets.length;\\n        for (uint256 i = 0; i < n - 1; i++) {\\n            IUniswapV2Pair(_targets[i]).swap(\\n                _amountsOut[i][0],\\n                _amountsOut[i][1],\\n                _targets[i + 1],\\n                \\\"\\\"\\n            );\\n        }\\n        IUniswapV2Pair(_targets[n - 1]).swap(\\n            _amountsOut[n - 1][0],\\n            _amountsOut[n - 1][1],\\n            address(this),\\n            \\\"\\\"\\n        );\\n        uint256 _wethBalanceAfter = WETH.balanceOf(address(this));\\n        require(\\n            _wethBalanceAfter > _wethBalanceBefore,\\n            \\\"reverted non profitable\\\"\\n        );\\n    }\\n\\n    function uniswapWeth(\\n        uint256 _wethAmountToFirstMarket,\\n        uint256 _ethAmountToCoinbase,\\n        address[] memory _targets,\\n        bytes[] memory _payloads\\n    ) external payable onlyExecutor {\\n        require(_targets.length == _payloads.length, \\\"bad lengths\\\");\\n        uint256 _wethBalanceBefore = WETH.balanceOf(address(this));\\n        bool success = WETH.transfer(_targets[0], _wethAmountToFirstMarket);\\n        require(success, \\\"first weth fail\\\");\\n        for (uint256 i = 0; i < _targets.length; i++) {\\n            (bool _success, bytes memory _response) = _targets[i].call(\\n                _payloads[i]\\n            );\\n            require(_success, \\\"error on loop\\\");\\n            _response;\\n        }\\n\\n        uint256 _wethBalanceAfter = WETH.balanceOf(address(this));\\n        require(\\n            _wethBalanceAfter > _wethBalanceBefore,\\n            \\\"reverted non profitable\\\"\\n        );\\n        // require(\\n        //     _wethBalanceAfter > _wethBalanceBefore + _ethAmountToCoinbase,\\n        //     \\\"coinbase fail\\\"\\n        // );\\n        // if (_ethAmountToCoinbase == 0) return;\\n\\n        // uint256 _ethBalance = address(this).balance;\\n        // if (_ethBalance < _ethAmountToCoinbase) {\\n        //     WETH.withdraw(_ethAmountToCoinbase - _ethBalance);\\n        // }\\n        // block.coinbase.transfer(_ethAmountToCoinbase);\\n    }\\n\\n    function call(\\n        address payable _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external payable onlyOwner returns (bytes memory) {\\n        require(_to != address(0));\\n        (bool _success, bytes memory _result) = _to.call{value: _value}(_data);\\n        require(_success);\\n        return _result;\\n    }\\n}\\n\",\"keccak256\":\"0xae40b3ee22e232c32500d300ed2a7b45999d97dc0d7bbaaa350f2c7a2d94ddeb\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c06040819052600080546001600160a01b031916730d500b1d8e8ef31e21c99d1db9a6444d3adf127017905561131538819003908190833981016040819052610048916100cd565b336080526001600160a01b03811660a05234156100c75760008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156100ad57600080fd5b505af11580156100c1573d6000803e3d6000fd5b50505050505b506100fd565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b60805160a0516111df6101366000396000818161030f015261083f01526000818160f6015281816101d101526102a501526111df6000f3fe60806040526004361061004e5760003560e01c8063503690d11461005a5780636dbf2fa01461007c578063b8d1452f146100a5578063c9305b78146100c5578063ecd494b3146100d857600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061007a610075366004610c39565b6100eb565b005b61008f61008a366004610c7a565b6101c4565b60405161009c9190610d2f565b60405180910390f35b3480156100b157600080fd5b5061007a6100c0366004610d62565b61029a565b61007a6100d3366004610dd2565b610304565b61007a6100e6366004610fd1565b610834565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461013c5760405162461bcd60e51b8152600401610133906110a8565b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561018657600080fd5b505af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be91906110cc565b50505050565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461020e5760405162461bcd60e51b8152600401610133906110a8565b6001600160a01b03851661022157600080fd5b600080866001600160a01b031686868660405161023f9291906110ee565b60006040518083038185875af1925050503d806000811461027c576040519150601f19603f3d011682016040523d82523d6000602084013e610281565b606091505b50915091508161029057600080fd5b9695505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102e25760405162461bcd60e51b8152600401610133906110a8565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036c5760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9032bc32b1baba37b960991b6044820152606401610133565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156103b057600080fd5b505afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e891906110fe565b60008054919250906001600160a01b031663a9059cbb8787848161040e5761040e611117565b90506020020160208101906104239190610d62565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018a9052604401602060405180830381600087803b15801561046b57600080fd5b505af115801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a391906110cc565b9050806104e45760405162461bcd60e51b815260206004820152600f60248201526e199a5c9cdd081dd95d1a0819985a5b608a1b6044820152606401610133565b8460005b6104f3600183611143565b8110156106465787878281811061050c5761050c611117565b90506020020160208101906105219190610d62565b6001600160a01b031663022c0d9f87878481811061054157610541611117565b90506040020160006002811061055957610559611117565b602002013588888581811061057057610570611117565b90506040020160016002811061058857610588611117565b60200201358b8b61059a87600161115a565b8181106105a9576105a9611117565b90506020020160208101906105be9190610d62565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526001600160a01b03166044820152608060648201526000608482015260a401600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b50505050808061063e90611172565b9150506104e8565b508686610654600184611143565b81811061066357610663611117565b90506020020160208101906106789190610d62565b6001600160a01b031663022c0d9f8686610693600186611143565b8181106106a2576106a2611117565b9050604002016000600281106106ba576106ba611117565b602002013587876106cc600187611143565b8181106106db576106db611117565b9050604002016001600281106106f3576106f3611117565b6040516001600160e01b031960e086901b168152600481019390935260200201356024820152306044820152608060648201526000608482015260a401600060405180830381600087803b15801561074a57600080fd5b505af115801561075e573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b1580156107a657600080fd5b505afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de91906110fe565b90508381116108295760405162461bcd60e51b81526020600482015260176024820152767265766572746564206e6f6e2070726f66697461626c6560481b6044820152606401610133565b505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461089c5760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9032bc32b1baba37b960991b6044820152606401610133565b80518251146108db5760405162461bcd60e51b815260206004820152600b60248201526a626164206c656e6774687360a81b6044820152606401610133565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561091f57600080fd5b505afa158015610933573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095791906110fe565b905060008060009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb8560008151811061099157610991611117565b6020026020010151886040518363ffffffff1660e01b81526004016109cb9291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156109e557600080fd5b505af11580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d91906110cc565b905080610a5e5760405162461bcd60e51b815260206004820152600f60248201526e199a5c9cdd081dd95d1a0819985a5b608a1b6044820152606401610133565b60005b8451811015610b5057600080868381518110610a7f57610a7f611117565b60200260200101516001600160a01b0316868481518110610aa257610aa2611117565b6020026020010151604051610ab7919061118d565b6000604051808303816000865af19150503d8060008114610af4576040519150601f19603f3d011682016040523d82523d6000602084013e610af9565b606091505b509150915081610b3b5760405162461bcd60e51b815260206004820152600d60248201526c06572726f72206f6e206c6f6f7609c1b6044820152606401610133565b50508080610b4890611172565b915050610a61565b50600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610b9557600080fd5b505afa158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcd91906110fe565b9050828111610c185760405162461bcd60e51b81526020600482015260176024820152767265766572746564206e6f6e2070726f66697461626c6560481b6044820152606401610133565b50505050505050565b6001600160a01b0381168114610c3657600080fd5b50565b600080600060608486031215610c4e57600080fd5b8335610c5981610c21565b92506020840135610c6981610c21565b929592945050506040919091013590565b60008060008060608587031215610c9057600080fd5b8435610c9b81610c21565b935060208501359250604085013567ffffffffffffffff80821115610cbf57600080fd5b818701915087601f830112610cd357600080fd5b813581811115610ce257600080fd5b886020828501011115610cf457600080fd5b95989497505060200194505050565b60005b83811015610d1e578181015183820152602001610d06565b838111156101be5750506000910152565b6020815260008251806020840152610d4e816040850160208701610d03565b601f01601f19169190910160400192915050565b600060208284031215610d7457600080fd5b8135610d7f81610c21565b9392505050565b60008083601f840112610d9857600080fd5b50813567ffffffffffffffff811115610db057600080fd5b6020830191508360208260061b8501011115610dcb57600080fd5b9250929050565b600080600080600060608688031215610dea57600080fd5b85359450602086013567ffffffffffffffff80821115610e0957600080fd5b818801915088601f830112610e1d57600080fd5b813581811115610e2c57600080fd5b8960208260051b8501011115610e4157600080fd5b602083019650809550506040880135915080821115610e5f57600080fd5b50610e6c88828901610d86565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ebc57610ebc610e7d565b604052919050565b600067ffffffffffffffff821115610ede57610ede610e7d565b5060051b60200190565b6000601f8381840112610efa57600080fd5b82356020610f0f610f0a83610ec4565b610e93565b82815260059290921b85018101918181019087841115610f2e57600080fd5b8287015b84811015610fc557803567ffffffffffffffff80821115610f535760008081fd5b818a0191508a603f830112610f685760008081fd5b85820135604082821115610f7e57610f7e610e7d565b610f8f828b01601f19168901610e93565b92508183528c81838601011115610fa65760008081fd5b8181850189850137506000908201870152845250918301918301610f32565b50979650505050505050565b60008060008060808587031215610fe757600080fd5b843593506020808601359350604086013567ffffffffffffffff8082111561100e57600080fd5b818801915088601f83011261102257600080fd5b8135611030610f0a82610ec4565b81815260059190911b8301840190848101908b83111561104f57600080fd5b938501935b8285101561107657843561106781610c21565b82529385019390850190611054565b96505050606088013592508083111561108e57600080fd5b505061109c87828801610ee8565b91505092959194509250565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b6000602082840312156110de57600080fd5b81518015158114610d7f57600080fd5b8183823760009101908152919050565b60006020828403121561111057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156111555761115561112d565b500390565b6000821982111561116d5761116d61112d565b500190565b60006000198214156111865761118661112d565b5060010190565b6000825161119f818460208701610d03565b919091019291505056fea2646970667358221220f2b825d9652bea5a6ecf766e01f5ffaa830e3b782fcc74af34953c84e4032d2e64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c8063503690d11461005a5780636dbf2fa01461007c578063b8d1452f146100a5578063c9305b78146100c5578063ecd494b3146100d857600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061007a610075366004610c39565b6100eb565b005b61008f61008a366004610c7a565b6101c4565b60405161009c9190610d2f565b60405180910390f35b3480156100b157600080fd5b5061007a6100c0366004610d62565b61029a565b61007a6100d3366004610dd2565b610304565b61007a6100e6366004610fd1565b610834565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461013c5760405162461bcd60e51b8152600401610133906110a8565b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561018657600080fd5b505af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be91906110cc565b50505050565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461020e5760405162461bcd60e51b8152600401610133906110a8565b6001600160a01b03851661022157600080fd5b600080866001600160a01b031686868660405161023f9291906110ee565b60006040518083038185875af1925050503d806000811461027c576040519150601f19603f3d011682016040523d82523d6000602084013e610281565b606091505b50915091508161029057600080fd5b9695505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102e25760405162461bcd60e51b8152600401610133906110a8565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036c5760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9032bc32b1baba37b960991b6044820152606401610133565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156103b057600080fd5b505afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e891906110fe565b60008054919250906001600160a01b031663a9059cbb8787848161040e5761040e611117565b90506020020160208101906104239190610d62565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018a9052604401602060405180830381600087803b15801561046b57600080fd5b505af115801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a391906110cc565b9050806104e45760405162461bcd60e51b815260206004820152600f60248201526e199a5c9cdd081dd95d1a0819985a5b608a1b6044820152606401610133565b8460005b6104f3600183611143565b8110156106465787878281811061050c5761050c611117565b90506020020160208101906105219190610d62565b6001600160a01b031663022c0d9f87878481811061054157610541611117565b90506040020160006002811061055957610559611117565b602002013588888581811061057057610570611117565b90506040020160016002811061058857610588611117565b60200201358b8b61059a87600161115a565b8181106105a9576105a9611117565b90506020020160208101906105be9190610d62565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526001600160a01b03166044820152608060648201526000608482015260a401600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b50505050808061063e90611172565b9150506104e8565b508686610654600184611143565b81811061066357610663611117565b90506020020160208101906106789190610d62565b6001600160a01b031663022c0d9f8686610693600186611143565b8181106106a2576106a2611117565b9050604002016000600281106106ba576106ba611117565b602002013587876106cc600187611143565b8181106106db576106db611117565b9050604002016001600281106106f3576106f3611117565b6040516001600160e01b031960e086901b168152600481019390935260200201356024820152306044820152608060648201526000608482015260a401600060405180830381600087803b15801561074a57600080fd5b505af115801561075e573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b1580156107a657600080fd5b505afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de91906110fe565b90508381116108295760405162461bcd60e51b81526020600482015260176024820152767265766572746564206e6f6e2070726f66697461626c6560481b6044820152606401610133565b505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461089c5760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9032bc32b1baba37b960991b6044820152606401610133565b80518251146108db5760405162461bcd60e51b815260206004820152600b60248201526a626164206c656e6774687360a81b6044820152606401610133565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561091f57600080fd5b505afa158015610933573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095791906110fe565b905060008060009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb8560008151811061099157610991611117565b6020026020010151886040518363ffffffff1660e01b81526004016109cb9291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156109e557600080fd5b505af11580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d91906110cc565b905080610a5e5760405162461bcd60e51b815260206004820152600f60248201526e199a5c9cdd081dd95d1a0819985a5b608a1b6044820152606401610133565b60005b8451811015610b5057600080868381518110610a7f57610a7f611117565b60200260200101516001600160a01b0316868481518110610aa257610aa2611117565b6020026020010151604051610ab7919061118d565b6000604051808303816000865af19150503d8060008114610af4576040519150601f19603f3d011682016040523d82523d6000602084013e610af9565b606091505b509150915081610b3b5760405162461bcd60e51b815260206004820152600d60248201526c06572726f72206f6e206c6f6f7609c1b6044820152606401610133565b50508080610b4890611172565b915050610a61565b50600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610b9557600080fd5b505afa158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcd91906110fe565b9050828111610c185760405162461bcd60e51b81526020600482015260176024820152767265766572746564206e6f6e2070726f66697461626c6560481b6044820152606401610133565b50505050505050565b6001600160a01b0381168114610c3657600080fd5b50565b600080600060608486031215610c4e57600080fd5b8335610c5981610c21565b92506020840135610c6981610c21565b929592945050506040919091013590565b60008060008060608587031215610c9057600080fd5b8435610c9b81610c21565b935060208501359250604085013567ffffffffffffffff80821115610cbf57600080fd5b818701915087601f830112610cd357600080fd5b813581811115610ce257600080fd5b886020828501011115610cf457600080fd5b95989497505060200194505050565b60005b83811015610d1e578181015183820152602001610d06565b838111156101be5750506000910152565b6020815260008251806020840152610d4e816040850160208701610d03565b601f01601f19169190910160400192915050565b600060208284031215610d7457600080fd5b8135610d7f81610c21565b9392505050565b60008083601f840112610d9857600080fd5b50813567ffffffffffffffff811115610db057600080fd5b6020830191508360208260061b8501011115610dcb57600080fd5b9250929050565b600080600080600060608688031215610dea57600080fd5b85359450602086013567ffffffffffffffff80821115610e0957600080fd5b818801915088601f830112610e1d57600080fd5b813581811115610e2c57600080fd5b8960208260051b8501011115610e4157600080fd5b602083019650809550506040880135915080821115610e5f57600080fd5b50610e6c88828901610d86565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ebc57610ebc610e7d565b604052919050565b600067ffffffffffffffff821115610ede57610ede610e7d565b5060051b60200190565b6000601f8381840112610efa57600080fd5b82356020610f0f610f0a83610ec4565b610e93565b82815260059290921b85018101918181019087841115610f2e57600080fd5b8287015b84811015610fc557803567ffffffffffffffff80821115610f535760008081fd5b818a0191508a603f830112610f685760008081fd5b85820135604082821115610f7e57610f7e610e7d565b610f8f828b01601f19168901610e93565b92508183528c81838601011115610fa65760008081fd5b8181850189850137506000908201870152845250918301918301610f32565b50979650505050505050565b60008060008060808587031215610fe757600080fd5b843593506020808601359350604086013567ffffffffffffffff8082111561100e57600080fd5b818801915088601f83011261102257600080fd5b8135611030610f0a82610ec4565b81815260059190911b8301840190848101908b83111561104f57600080fd5b938501935b8285101561107657843561106781610c21565b82529385019390850190611054565b96505050606088013592508083111561108e57600080fd5b505061109c87828801610ee8565b91505092959194509250565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b6000602082840312156110de57600080fd5b81518015158114610d7f57600080fd5b8183823760009101908152919050565b60006020828403121561111057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156111555761115561112d565b500390565b6000821982111561116d5761116d61112d565b500190565b60006000198214156111865761118661112d565b5060010190565b6000825161119f818460208701610d03565b919091019291505056fea2646970667358221220f2b825d9652bea5a6ecf766e01f5ffaa830e3b782fcc74af34953c84e4032d2e64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 117,
        "contract": "contracts/BundleExecutor.sol:FlashBotsMultiCall",
        "label": "WETH",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IWETH)107"
      }
    ],
    "types": {
      "t_contract(IWETH)107": {
        "encoding": "inplace",
        "label": "contract IWETH",
        "numberOfBytes": "20"
      }
    }
  }
}