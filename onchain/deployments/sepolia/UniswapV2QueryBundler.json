{
  "address": "0x8Bdc9d868950E6993B2d0Aa8e56E1cEDa5140200",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract UniswapV2Factory",
          "name": "_uniswapFactory",
          "type": "address"
        }
      ],
      "name": "getAllPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract UniswapV2Factory",
          "name": "_uniswapFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stop",
          "type": "uint256"
        }
      ],
      "name": "getPairsByIndexRange",
      "outputs": [
        {
          "internalType": "address[3][]",
          "name": "",
          "type": "address[3][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV2Pair[]",
          "name": "_pairs",
          "type": "address[]"
        }
      ],
      "name": "getReservesByPairs",
      "outputs": [
        {
          "internalType": "uint256[3][]",
          "name": "",
          "type": "uint256[3][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa9dbb4b6c75a7de272fb7439270169e75a74d9ee2fd51ff1795bf1a103e3d146",
  "receipt": {
    "to": null,
    "from": "0xF479cBA4257371790263Fe9d8F78D9C2c99f1837",
    "contractAddress": "0x8Bdc9d868950E6993B2d0Aa8e56E1cEDa5140200",
    "transactionIndex": 0,
    "gasUsed": "595129",
    "logsBloom": "0x
    "blockHash": "0xda9f2db6923c8ea0f0cf9d33898db3299caf8c5fdd8d5555dfcbc62c563059e1",
    "transactionHash": "0xa9dbb4b6c75a7de272fb7439270169e75a74d9ee2fd51ff1795bf1a103e3d146",
    "logs": [],
    "blockNumber": 2328573,
    "cumulativeGasUsed": "595129",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ab0958d40e1b8a0035214268b116582e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract UniswapV2Factory\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"getAllPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract UniswapV2Factory\",\"name\":\"_uniswapFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stop\",\"type\":\"uint256\"}],\"name\":\"getPairsByIndexRange\",\"outputs\":[{\"internalType\":\"address[3][]\",\"name\":\"\",\"type\":\"address[3][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Pair[]\",\"name\":\"_pairs\",\"type\":\"address[]\"}],\"name\":\"getReservesByPairs\",\"outputs\":[{\"internalType\":\"uint256[3][]\",\"name\":\"\",\"type\":\"uint256[3][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2QueryBundler.sol\":\"UniswapV2QueryBundler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2QueryBundler.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\npragma experimental ABIEncoderV2;\\n\\ninterface IUniswapV2Pair {\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n}\\n\\nabstract contract UniswapV2Factory {\\n    mapping(address => mapping(address => address)) public getPair;\\n    address[] public allPairs;\\n\\n    function allPairsLength() external view virtual returns (uint256);\\n}\\n\\n// In order to quickly load up data from Uniswap-like market, this contract allows easy iteration with a single eth_call\\ncontract UniswapV2QueryBundler {\\n    function getReservesByPairs(IUniswapV2Pair[] calldata _pairs)\\n        external\\n        view\\n        returns (uint256[3][] memory)\\n    {\\n        uint256[3][] memory result = new uint256[3][](_pairs.length);\\n        for (uint256 i = 0; i < _pairs.length; i++) {\\n            (result[i][0], result[i][1], result[i][2]) = _pairs[i]\\n                .getReserves();\\n        }\\n        return result;\\n    }\\n\\n    function getAllPairsLength(UniswapV2Factory _uniswapFactory)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        uint256 _allPairsLength = _uniswapFactory.allPairsLength();\\n        return _allPairsLength;\\n    }\\n\\n    function getPairsByIndexRange(\\n        UniswapV2Factory _uniswapFactory,\\n        uint256 _start,\\n        uint256 _stop\\n    ) external view returns (address[3][] memory) {\\n        uint256 _allPairsLength = _uniswapFactory.allPairsLength();\\n        if (_stop > _allPairsLength) {\\n            _stop = _allPairsLength;\\n        }\\n        require(_stop >= _start, \\\"start cannot be higher than stop\\\");\\n        uint256 _qty = _stop - _start;\\n        address[3][] memory result = new address[3][](_qty);\\n        for (uint256 i = 0; i < _qty; i++) {\\n            IUniswapV2Pair _uniswapPair = IUniswapV2Pair(\\n                _uniswapFactory.allPairs(_start + i)\\n            );\\n            result[i][0] = _uniswapPair.token0();\\n            result[i][1] = _uniswapPair.token1();\\n            result[i][2] = address(_uniswapPair);\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x772077b0483f62d227e5a46ae44c49d55def5e4e4b960be8449393d6a5ad0c0e\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109ce806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634dbf0f3914610046578063ab2217e41461006f578063c529447f1461008f575b600080fd5b6100596100543660046106bb565b6100b0565b6040516100669190610730565b60405180910390f35b61008261007d3660046107b2565b61027e565b60405161006691906107e7565b6100a261009d36600461084d565b610622565b604051908152602001610066565b606060008267ffffffffffffffff8111156100cd576100cd61086a565b60405190808252806020026020018201604052801561010657816020015b6100f361069d565b8152602001906001900390816100eb5790505b50905060005b838110156102765784848281811061012657610126610880565b905060200201602081019061013b919061084d565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561017357600080fd5b505afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab91906108b2565b826001600160701b03169250816001600160701b031691508063ffffffff1690508484815181106101de576101de610880565b60200260200101516000600381106101f8576101f8610880565b6020020185858151811061020e5761020e610880565b602002602001015160016003811061022857610228610880565b6020020186868151811061023e5761023e610880565b602002602001015160026003811061025857610258610880565b6020020192909252919052528061026e81610918565b91505061010c565b509392505050565b60606000846001600160a01b031663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b1580156102bb57600080fd5b505afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f39190610933565b905080831115610301578092505b838310156103555760405162461bcd60e51b815260206004820181905260248201527f73746172742063616e6e6f7420626520686967686572207468616e2073746f70604482015260640160405180910390fd5b6000610361858561094c565b905060008167ffffffffffffffff81111561037e5761037e61086a565b6040519080825280602002602001820160405280156103b757816020015b6103a461069d565b81526020019060019003908161039c5790505b50905060005b828110156106175760006001600160a01b038916631e3dd18b6103e0848b610963565b6040518263ffffffff1660e01b81526004016103fe91815260200190565b60206040518083038186803b15801561041657600080fd5b505afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e919061097b565b9050806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561048957600080fd5b505afa15801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c1919061097b565b8383815181106104d3576104d3610880565b60200260200101516000600381106104ed576104ed610880565b60200201906001600160a01b031690816001600160a01b031681525050806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b919061097b565b83838151811061058d5761058d610880565b60200260200101516001600381106105a7576105a7610880565b60200201906001600160a01b031690816001600160a01b031681525050808383815181106105d7576105d7610880565b60200260200101516002600381106105f1576105f1610880565b6001600160a01b039092166020929092020152508061060f81610918565b9150506103bd565b509695505050505050565b600080826001600160a01b031663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b15801561065e57600080fd5b505afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106969190610933565b9392505050565b60405180606001604052806003906020820280368337509192915050565b600080602083850312156106ce57600080fd5b823567ffffffffffffffff808211156106e657600080fd5b818501915085601f8301126106fa57600080fd5b81358181111561070957600080fd5b8660208260051b850101111561071e57600080fd5b60209290920196919550909350505050565b602080825282518282018190526000919084820190604085019084805b8281101561078d57845184835b60038110156107775782518252918801919088019060010161075a565b505050938501936060939093019260010161074d565b5091979650505050505050565b6001600160a01b03811681146107af57600080fd5b50565b6000806000606084860312156107c757600080fd5b83356107d28161079a565b95602085013595506040909401359392505050565b602080825282518282018190526000919084820190604085019084805b8281101561078d57845184835b60038110156108375782516001600160a01b031682529188019190880190600101610811565b5050509385019360609390930192600101610804565b60006020828403121561085f57600080fd5b81356106968161079a565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80516001600160701b03811681146108ad57600080fd5b919050565b6000806000606084860312156108c757600080fd5b6108d084610896565b92506108de60208501610896565b9150604084015163ffffffff811681146108f757600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b600060001982141561092c5761092c610902565b5060010190565b60006020828403121561094557600080fd5b5051919050565b60008282101561095e5761095e610902565b500390565b6000821982111561097657610976610902565b500190565b60006020828403121561098d57600080fd5b81516106968161079a56fea26469706673582212206af3ddcd6238f2203b9073d06c43ebea361ac69c8a6fedc6ba680156b51fe5aa64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634dbf0f3914610046578063ab2217e41461006f578063c529447f1461008f575b600080fd5b6100596100543660046106bb565b6100b0565b6040516100669190610730565b60405180910390f35b61008261007d3660046107b2565b61027e565b60405161006691906107e7565b6100a261009d36600461084d565b610622565b604051908152602001610066565b606060008267ffffffffffffffff8111156100cd576100cd61086a565b60405190808252806020026020018201604052801561010657816020015b6100f361069d565b8152602001906001900390816100eb5790505b50905060005b838110156102765784848281811061012657610126610880565b905060200201602081019061013b919061084d565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561017357600080fd5b505afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab91906108b2565b826001600160701b03169250816001600160701b031691508063ffffffff1690508484815181106101de576101de610880565b60200260200101516000600381106101f8576101f8610880565b6020020185858151811061020e5761020e610880565b602002602001015160016003811061022857610228610880565b6020020186868151811061023e5761023e610880565b602002602001015160026003811061025857610258610880565b6020020192909252919052528061026e81610918565b91505061010c565b509392505050565b60606000846001600160a01b031663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b1580156102bb57600080fd5b505afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f39190610933565b905080831115610301578092505b838310156103555760405162461bcd60e51b815260206004820181905260248201527f73746172742063616e6e6f7420626520686967686572207468616e2073746f70604482015260640160405180910390fd5b6000610361858561094c565b905060008167ffffffffffffffff81111561037e5761037e61086a565b6040519080825280602002602001820160405280156103b757816020015b6103a461069d565b81526020019060019003908161039c5790505b50905060005b828110156106175760006001600160a01b038916631e3dd18b6103e0848b610963565b6040518263ffffffff1660e01b81526004016103fe91815260200190565b60206040518083038186803b15801561041657600080fd5b505afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e919061097b565b9050806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561048957600080fd5b505afa15801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c1919061097b565b8383815181106104d3576104d3610880565b60200260200101516000600381106104ed576104ed610880565b60200201906001600160a01b031690816001600160a01b031681525050806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b919061097b565b83838151811061058d5761058d610880565b60200260200101516001600381106105a7576105a7610880565b60200201906001600160a01b031690816001600160a01b031681525050808383815181106105d7576105d7610880565b60200260200101516002600381106105f1576105f1610880565b6001600160a01b039092166020929092020152508061060f81610918565b9150506103bd565b509695505050505050565b600080826001600160a01b031663574f2ba36040518163ffffffff1660e01b815260040160206040518083038186803b15801561065e57600080fd5b505afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106969190610933565b9392505050565b60405180606001604052806003906020820280368337509192915050565b600080602083850312156106ce57600080fd5b823567ffffffffffffffff808211156106e657600080fd5b818501915085601f8301126106fa57600080fd5b81358181111561070957600080fd5b8660208260051b850101111561071e57600080fd5b60209290920196919550909350505050565b602080825282518282018190526000919084820190604085019084805b8281101561078d57845184835b60038110156107775782518252918801919088019060010161075a565b505050938501936060939093019260010161074d565b5091979650505050505050565b6001600160a01b03811681146107af57600080fd5b50565b6000806000606084860312156107c757600080fd5b83356107d28161079a565b95602085013595506040909401359392505050565b602080825282518282018190526000919084820190604085019084805b8281101561078d57845184835b60038110156108375782516001600160a01b031682529188019190880190600101610811565b5050509385019360609390930192600101610804565b60006020828403121561085f57600080fd5b81356106968161079a565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80516001600160701b03811681146108ad57600080fd5b919050565b6000806000606084860312156108c757600080fd5b6108d084610896565b92506108de60208501610896565b9150604084015163ffffffff811681146108f757600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b600060001982141561092c5761092c610902565b5060010190565b60006020828403121561094557600080fd5b5051919050565b60008282101561095e5761095e610902565b500390565b6000821982111561097657610976610902565b500190565b60006020828403121561098d57600080fd5b81516106968161079a56fea26469706673582212206af3ddcd6238f2203b9073d06c43ebea361ac69c8a6fedc6ba680156b51fe5aa64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}