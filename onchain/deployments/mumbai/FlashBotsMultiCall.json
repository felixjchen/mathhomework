{
  "address": "0x73D54F010D0ebC559f913BB191ae04f51bE3aD8F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "call",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts0Out",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts1Out",
          "type": "uint256[]"
        }
      ],
      "name": "hoppity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "setWeth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sweepERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wethIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount0Outs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount1Outs",
          "type": "uint256[]"
        }
      ],
      "name": "twohop",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wethAmountToFirstMarket",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ethAmountToCoinbase",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_payloads",
          "type": "bytes[]"
        }
      ],
      "name": "uniswapWeth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x119cf575bed37a53165fb2b7a90f8500762897bd771731240c7dfc2720b779ae",
  "receipt": {
    "to": null,
    "from": "0xF479cBA4257371790263Fe9d8F78D9C2c99f1837",
    "contractAddress": "0x73D54F010D0ebC559f913BB191ae04f51bE3aD8F",
    "transactionIndex": 19,
    "gasUsed": "1246864",
    "logsBloom": "0x
    "blockHash": "0x88f682ca6515ae8b5ccd3ba343314fd831c24d54704188ca44e4155c0941dc4e",
    "transactionHash": "0x119cf575bed37a53165fb2b7a90f8500762897bd771731240c7dfc2720b779ae",
    "logs": [
      {
        "transactionIndex": 19,
        "blockNumber": 28101759,
        "transactionHash": "0x119cf575bed37a53165fb2b7a90f8500762897bd771731240c7dfc2720b779ae",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000f479cba4257371790263fe9d8f78d9c2c99f1837",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000b130a5e6f097000000000000000000000000000000000000000000000000018643f731af1148200000000000000000000000000000000000000000000070511e711a2304b442e00000000000000000000000000000000000000000000000018592c68bc820b1200000000000000000000000000000000000000000000070511f224ac8eba4d9e",
        "logIndex": 116,
        "blockHash": "0x88f682ca6515ae8b5ccd3ba343314fd831c24d54704188ca44e4155c0941dc4e"
      }
    ],
    "blockNumber": 28101759,
    "cumulativeGasUsed": "4873786",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF479cBA4257371790263Fe9d8F78D9C2c99f1837"
  ],
  "numDeployments": 17,
  "solcInputHash": "fc0feeaa4dafac16a2ef4cd416585abc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts0Out\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts1Out\",\"type\":\"uint256[]\"}],\"name\":\"hoppity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setWeth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sweepERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wethIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount0Outs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount1Outs\",\"type\":\"uint256[]\"}],\"name\":\"twohop\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wethAmountToFirstMarket\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethAmountToCoinbase\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_payloads\",\"type\":\"bytes[]\"}],\"name\":\"uniswapWeth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BundleExecutor.sol\":\"FlashBotsMultiCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BundleExecutor.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\npragma experimental ABIEncoderV2;\\n\\ninterface IUniswapV2Pair {\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n}\\n\\ninterface IERC20 {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n}\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256) external;\\n}\\n\\n// This contract simply calls multiple targets sequentially, ensuring WETH balance before and after\\n\\ncontract FlashBotsMultiCall {\\n    address private immutable owner;\\n    address private immutable executor;\\n\\n    // TODO IDK\\n    IWETH private WETH = IWETH(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\n\\n    modifier onlyExecutor() {\\n        require(msg.sender == executor, \\\"Only executor\\\");\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner\\\");\\n        _;\\n    }\\n\\n    constructor(address _executor) payable {\\n        owner = msg.sender;\\n        executor = _executor;\\n        if (msg.value > 0) {\\n            WETH.deposit{value: msg.value}();\\n        }\\n    }\\n\\n    function setWeth(address _new) public onlyOwner {\\n        WETH = IWETH(_new);\\n    }\\n\\n    receive() external payable {}\\n\\n    function sweepERC20(\\n        IERC20 token,\\n        address _to,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        token.transfer(_to, _amount);\\n    }\\n\\n    function hoppity(\\n        uint256 _amountIn,\\n        address[] calldata _targets,\\n        uint256[] calldata _amounts0Out,\\n        uint256[] calldata _amounts1Out\\n    ) external payable onlyExecutor {\\n        uint256 _wethBalanceBefore = WETH.balanceOf(address(this));\\n\\n        bool success = WETH.transfer(_targets[0], _amountIn);\\n        require(success, \\\"first weth fail\\\");\\n        uint256 n = _targets.length;\\n        for (uint256 i = 0; i < n - 1; i++) {\\n            IUniswapV2Pair(_targets[i]).swap(\\n                _amounts0Out[i],\\n                _amounts1Out[i],\\n                _targets[i + 1],\\n                \\\"\\\"\\n            );\\n        }\\n        IUniswapV2Pair(_targets[n - 1]).swap(\\n            _amounts0Out[n - 1],\\n            _amounts1Out[n - 1],\\n            address(this),\\n            \\\"\\\"\\n        );\\n        uint256 _wethBalanceAfter = WETH.balanceOf(address(this));\\n        require(\\n            _wethBalanceAfter > _wethBalanceBefore,\\n            \\\"reverted non profitable\\\"\\n        );\\n    }\\n\\n    function twohop(\\n        uint256 wethIn,\\n        address[] calldata targets,\\n        uint256[] calldata amount0Outs,\\n        uint256[] calldata amount1Outs\\n    ) external payable onlyExecutor {\\n        uint256 _wethBalanceBefore = WETH.balanceOf(address(this));\\n        bool success = WETH.transfer(targets[0], wethIn);\\n        require(success, \\\"first weth fail\\\");\\n        IUniswapV2Pair(targets[0]).swap(\\n            amount0Outs[0],\\n            amount1Outs[0],\\n            targets[1],\\n            \\\"\\\"\\n        );\\n        IUniswapV2Pair(targets[1]).swap(\\n            amount0Outs[1],\\n            amount1Outs[1],\\n            address(this),\\n            \\\"\\\"\\n        );\\n        uint256 _wethBalanceAfter = WETH.balanceOf(address(this));\\n        require(\\n            _wethBalanceAfter > _wethBalanceBefore,\\n            \\\"reverted non profitable\\\"\\n        );\\n    }\\n\\n    function uniswapWeth(\\n        uint256 _wethAmountToFirstMarket,\\n        uint256 _ethAmountToCoinbase,\\n        address[] memory _targets,\\n        bytes[] memory _payloads\\n    ) external payable onlyExecutor {\\n        require(_targets.length == _payloads.length, \\\"bad lengths\\\");\\n        uint256 _wethBalanceBefore = WETH.balanceOf(address(this));\\n        bool success = WETH.transfer(_targets[0], _wethAmountToFirstMarket);\\n        require(success, \\\"first weth fail\\\");\\n        for (uint256 i = 0; i < _targets.length; i++) {\\n            (bool _success, bytes memory _response) = _targets[i].call(\\n                _payloads[i]\\n            );\\n            require(_success, \\\"error on loop\\\");\\n            _response;\\n        }\\n\\n        uint256 _wethBalanceAfter = WETH.balanceOf(address(this));\\n        require(\\n            _wethBalanceAfter > _wethBalanceBefore,\\n            \\\"reverted non profitable\\\"\\n        );\\n        // require(\\n        //     _wethBalanceAfter > _wethBalanceBefore + _ethAmountToCoinbase,\\n        //     \\\"coinbase fail\\\"\\n        // );\\n        // if (_ethAmountToCoinbase == 0) return;\\n\\n        // uint256 _ethBalance = address(this).balance;\\n        // if (_ethBalance < _ethAmountToCoinbase) {\\n        //     WETH.withdraw(_ethAmountToCoinbase - _ethBalance);\\n        // }\\n        // block.coinbase.transfer(_ethAmountToCoinbase);\\n    }\\n\\n    function call(\\n        address payable _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external payable onlyOwner returns (bytes memory) {\\n        require(_to != address(0));\\n        (bool _success, bytes memory _result) = _to.call{value: _value}(_data);\\n        require(_success);\\n        return _result;\\n    }\\n}\\n\",\"keccak256\":\"0xbc8576191cdee4ed019a5773bf4b6787b7a9f2ecfca6ee4ea05a9225da82f4f2\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c06040819052600080546001600160a01b031916730d500b1d8e8ef31e21c99d1db9a6444d3adf127017905561166538819003908190833981016040819052610048916100cd565b336080526001600160a01b03811660a05234156100c75760008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156100ad57600080fd5b505af11580156100c1573d6000803e3d6000fd5b50505050505b506100fd565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b60805160a05161152761013e60003960008181610114015281816106210152610b4501526000818161055101528181610a070152610adb01526115276000f3fe6080604052600436106100595760003560e01c806312d2d05a14610065578063503690d11461007a5780636b1ffaf71461009a5780636dbf2fa0146100ad578063b8d1452f146100d6578063ecd494b3146100f657600080fd5b3661006057005b600080fd5b610078610073366004610f07565b610109565b005b34801561008657600080fd5b50610078610095366004610fc3565b610546565b6100786100a8366004610f07565b610616565b6100c06100bb366004611004565b6109fa565b6040516100cd91906110b9565b60405180910390f35b3480156100e257600080fd5b506100786100f13660046110ec565b610ad0565b610078610104366004611264565b610b3a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461015a5760405162461bcd60e51b81526004016101519061133b565b60405180910390fd5b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561019e57600080fd5b505afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d69190611362565b60008054919250906001600160a01b031663a9059cbb898984816101fc576101fc61137b565b905060200201602081019061021191906110ec565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018c9052604401602060405180830381600087803b15801561025957600080fd5b505af115801561026d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102919190611391565b9050806102b05760405162461bcd60e51b8152600401610151906113b3565b8660005b6102bf6001836113f2565b8110156103c3578989828181106102d8576102d861137b565b90506020020160208101906102ed91906110ec565b6001600160a01b031663022c0d9f89898481811061030d5761030d61137b565b905060200201358888858181106103265761032661137b565b905060200201358d8d86600161033c9190611409565b81811061034b5761034b61137b565b905060200201602081019061036091906110ec565b6040518463ffffffff1660e01b815260040161037e93929190611421565b600060405180830381600087803b15801561039857600080fd5b505af11580156103ac573d6000803e3d6000fd5b5050505080806103bb9061144f565b9150506102b4565b5088886103d16001846113f2565b8181106103e0576103e061137b565b90506020020160208101906103f591906110ec565b6001600160a01b031663022c0d9f88886104106001866113f2565b81811061041f5761041f61137b565b90506020020135878760018661043591906113f2565b8181106104445761044461137b565b90506020020135306040518463ffffffff1660e01b815260040161046a93929190611421565b600060405180830381600087803b15801561048457600080fd5b505af1158015610498573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190611362565b90508381116105395760405162461bcd60e51b81526004016101519061146a565b5050505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461058e5760405162461bcd60e51b8152600401610151906114a1565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b1580156105d857600080fd5b505af11580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190611391565b50505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065e5760405162461bcd60e51b81526004016101519061133b565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611362565b60008054919250906001600160a01b031663a9059cbb898984816107005761070061137b565b905060200201602081019061071591906110ec565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018c9052604401602060405180830381600087803b15801561075d57600080fd5b505af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190611391565b9050806107b45760405162461bcd60e51b8152600401610151906113b3565b878760008181106107c7576107c761137b565b90506020020160208101906107dc91906110ec565b6001600160a01b031663022c0d9f878760008181106107fd576107fd61137b565b90506020020135868660008181106108175761081761137b565b905060200201358b8b60018181106108315761083161137b565b905060200201602081019061084691906110ec565b6040518463ffffffff1660e01b815260040161086493929190611421565b600060405180830381600087803b15801561087e57600080fd5b505af1158015610892573d6000803e3d6000fd5b50505050878760018181106108a9576108a961137b565b90506020020160208101906108be91906110ec565b6001600160a01b031663022c0d9f878760018181106108df576108df61137b565b90506020020135868660018181106108f9576108f961137b565b90506020020135306040518463ffffffff1660e01b815260040161091f93929190611421565b600060405180830381600087803b15801561093957600080fd5b505af115801561094d573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b15801561099557600080fd5b505afa1580156109a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cd9190611362565b90508281116109ee5760405162461bcd60e51b81526004016101519061146a565b50505050505050505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a445760405162461bcd60e51b8152600401610151906114a1565b6001600160a01b038516610a5757600080fd5b600080866001600160a01b0316868686604051610a759291906114c5565b60006040518083038185875af1925050503d8060008114610ab2576040519150601f19603f3d011682016040523d82523d6000602084013e610ab7565b606091505b509150915081610ac657600080fd5b9695505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b185760405162461bcd60e51b8152600401610151906114a1565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b825760405162461bcd60e51b81526004016101519061133b565b8051825114610bc15760405162461bcd60e51b815260206004820152600b60248201526a626164206c656e6774687360a81b6044820152606401610151565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610c0557600080fd5b505afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190611362565b905060008060009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb85600081518110610c7757610c7761137b565b6020026020010151886040518363ffffffff1660e01b8152600401610cb19291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b158015610ccb57600080fd5b505af1158015610cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d039190611391565b905080610d225760405162461bcd60e51b8152600401610151906113b3565b60005b8451811015610e1457600080868381518110610d4357610d4361137b565b60200260200101516001600160a01b0316868481518110610d6657610d6661137b565b6020026020010151604051610d7b91906114d5565b6000604051808303816000865af19150503d8060008114610db8576040519150601f19603f3d011682016040523d82523d6000602084013e610dbd565b606091505b509150915081610dff5760405162461bcd60e51b815260206004820152600d60248201526c06572726f72206f6e206c6f6f7609c1b6044820152606401610151565b50508080610e0c9061144f565b915050610d25565b50600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610e5957600080fd5b505afa158015610e6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e919190611362565b9050828111610eb25760405162461bcd60e51b81526004016101519061146a565b50505050505050565b60008083601f840112610ecd57600080fd5b50813567ffffffffffffffff811115610ee557600080fd5b6020830191508360208260051b8501011115610f0057600080fd5b9250929050565b60008060008060008060006080888a031215610f2257600080fd5b87359650602088013567ffffffffffffffff80821115610f4157600080fd5b610f4d8b838c01610ebb565b909850965060408a0135915080821115610f6657600080fd5b610f728b838c01610ebb565b909650945060608a0135915080821115610f8b57600080fd5b50610f988a828b01610ebb565b989b979a50959850939692959293505050565b6001600160a01b0381168114610fc057600080fd5b50565b600080600060608486031215610fd857600080fd5b8335610fe381610fab565b92506020840135610ff381610fab565b929592945050506040919091013590565b6000806000806060858703121561101a57600080fd5b843561102581610fab565b935060208501359250604085013567ffffffffffffffff8082111561104957600080fd5b818701915087601f83011261105d57600080fd5b81358181111561106c57600080fd5b88602082850101111561107e57600080fd5b95989497505060200194505050565b60005b838110156110a8578181015183820152602001611090565b838111156106105750506000910152565b60208152600082518060208401526110d881604085016020870161108d565b601f01601f19169190910160400192915050565b6000602082840312156110fe57600080fd5b813561110981610fab565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561114f5761114f611110565b604052919050565b600067ffffffffffffffff82111561117157611171611110565b5060051b60200190565b6000601f838184011261118d57600080fd5b823560206111a261119d83611157565b611126565b82815260059290921b850181019181810190878411156111c157600080fd5b8287015b8481101561125857803567ffffffffffffffff808211156111e65760008081fd5b818a0191508a603f8301126111fb5760008081fd5b8582013560408282111561121157611211611110565b611222828b01601f19168901611126565b92508183528c818386010111156112395760008081fd5b81818501898501375060009082018701528452509183019183016111c5565b50979650505050505050565b6000806000806080858703121561127a57600080fd5b843593506020808601359350604086013567ffffffffffffffff808211156112a157600080fd5b818801915088601f8301126112b557600080fd5b81356112c361119d82611157565b81815260059190911b8301840190848101908b8311156112e257600080fd5b938501935b828510156113095784356112fa81610fab565b825293850193908501906112e7565b96505050606088013592508083111561132157600080fd5b505061132f8782880161117b565b91505092959194509250565b6020808252600d908201526c27b7363c9032bc32b1baba37b960991b604082015260600190565b60006020828403121561137457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156113a357600080fd5b8151801515811461110957600080fd5b6020808252600f908201526e199a5c9cdd081dd95d1a0819985a5b608a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611404576114046113dc565b500390565b6000821982111561141c5761141c6113dc565b500190565b92835260208301919091526001600160a01b0316604082015260806060820181905260009082015260a00190565b6000600019821415611463576114636113dc565b5060010190565b60208082526017908201527f7265766572746564206e6f6e2070726f66697461626c65000000000000000000604082015260600190565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b8183823760009101908152919050565b600082516114e781846020870161108d565b919091019291505056fea264697066735822122088aed8d0c8dfeff199d97b1a20d15c7f5dcde3b595193d0ca0df06add6669cd464736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c806312d2d05a14610065578063503690d11461007a5780636b1ffaf71461009a5780636dbf2fa0146100ad578063b8d1452f146100d6578063ecd494b3146100f657600080fd5b3661006057005b600080fd5b610078610073366004610f07565b610109565b005b34801561008657600080fd5b50610078610095366004610fc3565b610546565b6100786100a8366004610f07565b610616565b6100c06100bb366004611004565b6109fa565b6040516100cd91906110b9565b60405180910390f35b3480156100e257600080fd5b506100786100f13660046110ec565b610ad0565b610078610104366004611264565b610b3a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461015a5760405162461bcd60e51b81526004016101519061133b565b60405180910390fd5b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561019e57600080fd5b505afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d69190611362565b60008054919250906001600160a01b031663a9059cbb898984816101fc576101fc61137b565b905060200201602081019061021191906110ec565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018c9052604401602060405180830381600087803b15801561025957600080fd5b505af115801561026d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102919190611391565b9050806102b05760405162461bcd60e51b8152600401610151906113b3565b8660005b6102bf6001836113f2565b8110156103c3578989828181106102d8576102d861137b565b90506020020160208101906102ed91906110ec565b6001600160a01b031663022c0d9f89898481811061030d5761030d61137b565b905060200201358888858181106103265761032661137b565b905060200201358d8d86600161033c9190611409565b81811061034b5761034b61137b565b905060200201602081019061036091906110ec565b6040518463ffffffff1660e01b815260040161037e93929190611421565b600060405180830381600087803b15801561039857600080fd5b505af11580156103ac573d6000803e3d6000fd5b5050505080806103bb9061144f565b9150506102b4565b5088886103d16001846113f2565b8181106103e0576103e061137b565b90506020020160208101906103f591906110ec565b6001600160a01b031663022c0d9f88886104106001866113f2565b81811061041f5761041f61137b565b90506020020135878760018661043591906113f2565b8181106104445761044461137b565b90506020020135306040518463ffffffff1660e01b815260040161046a93929190611421565b600060405180830381600087803b15801561048457600080fd5b505af1158015610498573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190611362565b90508381116105395760405162461bcd60e51b81526004016101519061146a565b5050505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461058e5760405162461bcd60e51b8152600401610151906114a1565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b1580156105d857600080fd5b505af11580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190611391565b50505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065e5760405162461bcd60e51b81526004016101519061133b565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611362565b60008054919250906001600160a01b031663a9059cbb898984816107005761070061137b565b905060200201602081019061071591906110ec565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018c9052604401602060405180830381600087803b15801561075d57600080fd5b505af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190611391565b9050806107b45760405162461bcd60e51b8152600401610151906113b3565b878760008181106107c7576107c761137b565b90506020020160208101906107dc91906110ec565b6001600160a01b031663022c0d9f878760008181106107fd576107fd61137b565b90506020020135868660008181106108175761081761137b565b905060200201358b8b60018181106108315761083161137b565b905060200201602081019061084691906110ec565b6040518463ffffffff1660e01b815260040161086493929190611421565b600060405180830381600087803b15801561087e57600080fd5b505af1158015610892573d6000803e3d6000fd5b50505050878760018181106108a9576108a961137b565b90506020020160208101906108be91906110ec565b6001600160a01b031663022c0d9f878760018181106108df576108df61137b565b90506020020135868660018181106108f9576108f961137b565b90506020020135306040518463ffffffff1660e01b815260040161091f93929190611421565b600060405180830381600087803b15801561093957600080fd5b505af115801561094d573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506001600160a01b031691506370a082319060240160206040518083038186803b15801561099557600080fd5b505afa1580156109a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cd9190611362565b90508281116109ee5760405162461bcd60e51b81526004016101519061146a565b50505050505050505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a445760405162461bcd60e51b8152600401610151906114a1565b6001600160a01b038516610a5757600080fd5b600080866001600160a01b0316868686604051610a759291906114c5565b60006040518083038185875af1925050503d8060008114610ab2576040519150601f19603f3d011682016040523d82523d6000602084013e610ab7565b606091505b509150915081610ac657600080fd5b9695505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b185760405162461bcd60e51b8152600401610151906114a1565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b825760405162461bcd60e51b81526004016101519061133b565b8051825114610bc15760405162461bcd60e51b815260206004820152600b60248201526a626164206c656e6774687360a81b6044820152606401610151565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610c0557600080fd5b505afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190611362565b905060008060009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb85600081518110610c7757610c7761137b565b6020026020010151886040518363ffffffff1660e01b8152600401610cb19291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b158015610ccb57600080fd5b505af1158015610cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d039190611391565b905080610d225760405162461bcd60e51b8152600401610151906113b3565b60005b8451811015610e1457600080868381518110610d4357610d4361137b565b60200260200101516001600160a01b0316868481518110610d6657610d6661137b565b6020026020010151604051610d7b91906114d5565b6000604051808303816000865af19150503d8060008114610db8576040519150601f19603f3d011682016040523d82523d6000602084013e610dbd565b606091505b509150915081610dff5760405162461bcd60e51b815260206004820152600d60248201526c06572726f72206f6e206c6f6f7609c1b6044820152606401610151565b50508080610e0c9061144f565b915050610d25565b50600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610e5957600080fd5b505afa158015610e6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e919190611362565b9050828111610eb25760405162461bcd60e51b81526004016101519061146a565b50505050505050565b60008083601f840112610ecd57600080fd5b50813567ffffffffffffffff811115610ee557600080fd5b6020830191508360208260051b8501011115610f0057600080fd5b9250929050565b60008060008060008060006080888a031215610f2257600080fd5b87359650602088013567ffffffffffffffff80821115610f4157600080fd5b610f4d8b838c01610ebb565b909850965060408a0135915080821115610f6657600080fd5b610f728b838c01610ebb565b909650945060608a0135915080821115610f8b57600080fd5b50610f988a828b01610ebb565b989b979a50959850939692959293505050565b6001600160a01b0381168114610fc057600080fd5b50565b600080600060608486031215610fd857600080fd5b8335610fe381610fab565b92506020840135610ff381610fab565b929592945050506040919091013590565b6000806000806060858703121561101a57600080fd5b843561102581610fab565b935060208501359250604085013567ffffffffffffffff8082111561104957600080fd5b818701915087601f83011261105d57600080fd5b81358181111561106c57600080fd5b88602082850101111561107e57600080fd5b95989497505060200194505050565b60005b838110156110a8578181015183820152602001611090565b838111156106105750506000910152565b60208152600082518060208401526110d881604085016020870161108d565b601f01601f19169190910160400192915050565b6000602082840312156110fe57600080fd5b813561110981610fab565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561114f5761114f611110565b604052919050565b600067ffffffffffffffff82111561117157611171611110565b5060051b60200190565b6000601f838184011261118d57600080fd5b823560206111a261119d83611157565b611126565b82815260059290921b850181019181810190878411156111c157600080fd5b8287015b8481101561125857803567ffffffffffffffff808211156111e65760008081fd5b818a0191508a603f8301126111fb5760008081fd5b8582013560408282111561121157611211611110565b611222828b01601f19168901611126565b92508183528c818386010111156112395760008081fd5b81818501898501375060009082018701528452509183019183016111c5565b50979650505050505050565b6000806000806080858703121561127a57600080fd5b843593506020808601359350604086013567ffffffffffffffff808211156112a157600080fd5b818801915088601f8301126112b557600080fd5b81356112c361119d82611157565b81815260059190911b8301840190848101908b8311156112e257600080fd5b938501935b828510156113095784356112fa81610fab565b825293850193908501906112e7565b96505050606088013592508083111561132157600080fd5b505061132f8782880161117b565b91505092959194509250565b6020808252600d908201526c27b7363c9032bc32b1baba37b960991b604082015260600190565b60006020828403121561137457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156113a357600080fd5b8151801515811461110957600080fd5b6020808252600f908201526e199a5c9cdd081dd95d1a0819985a5b608a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611404576114046113dc565b500390565b6000821982111561141c5761141c6113dc565b500190565b92835260208301919091526001600160a01b0316604082015260806060820181905260009082015260a00190565b6000600019821415611463576114636113dc565b5060010190565b60208082526017908201527f7265766572746564206e6f6e2070726f66697461626c65000000000000000000604082015260600190565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b8183823760009101908152919050565b600082516114e781846020870161108d565b919091019291505056fea264697066735822122088aed8d0c8dfeff199d97b1a20d15c7f5dcde3b595193d0ca0df06add6669cd464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 117,
        "contract": "contracts/BundleExecutor.sol:FlashBotsMultiCall",
        "label": "WETH",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IWETH)107"
      }
    ],
    "types": {
      "t_contract(IWETH)107": {
        "encoding": "inplace",
        "label": "contract IWETH",
        "numberOfBytes": "20"
      }
    }
  }
}